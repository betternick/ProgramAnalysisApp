/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.6/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Add support for building a CLI application in Java.
    id 'application'
    // Test coverage
    id 'jacoco'
    id 'java'
    // Spring Boot plugin to simplify working with Spring applications
        id 'org.springframework.boot' version '3.2.3'
        id 'io.spring.dependency-management' version '1.1.4'
}

jacoco {
    toolVersion = "0.8.11" // Specify JaCoCo version
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // implementation libs.guava

    // Spoon is a library to analyze and transform Java source code.
    implementation 'fr.inria.gforge.spoon:spoon-core:10.4.1'

    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    sourceCompatibility = '21'
    // toolchain {
    //     languageVersion = JavaLanguageVersion.of(21)
    // }
}

application {
    // Define the main class for the application.
    // mainClass = 'org.App'
    mainClass = 'org.servlet.Application'
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
    dependsOn test // Ensure test task runs before generating coverage report
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    finalizedBy jacocoTestReport // Generate coverage report after tests
}

